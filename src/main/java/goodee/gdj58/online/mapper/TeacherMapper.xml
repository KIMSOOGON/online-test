<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goodee.gdj58.online.mapper.TeacherMapper">

	<!-- 시험지 출력 (문제당 보기항목) -->
	<select id="selectExampleList"
		resultType="java.util.Map"
		parameterType="int">
		SELECT
			q.question_idx questionIdx
			, q.question_title questionTitle
			, e.example_idx exampleIdx
			, e.example_title exampleTitle
			, e.example_ox exampleOx
		FROM question q
		INNER JOIN example e ON e.question_no = q.question_no
		WHERE q.test_no = #{testNo}
		ORDER BY q.question_idx ASC, e.example_idx ASC
	</select>

	<!-- 시험지 출력 (시험에 해당하는 문제리스트) -->
	<select id="selectQuestionList"
		resultType="goodee.gdj58.online.vo.Question"
		parameterType="int">
			SELECT
				question_no questionNo
				, question_idx questionIdx
				, question_title questionTitle
			FROM question
			WHERE test_no = #{testNo}
			ORDER BY question_idx ASC
	</select>
	
	<!-- Example 등록 -->
	<insert id="insertExample" parameterType="goodee.gdj58.online.vo.Example">
		INSERT INTO question(
			question_no
			, example_idx
			, example_title
			, example_ox
		) VALUES (
			#{questionNo}
			, #{exmapleIdx}
			, #{exampleTitle}
			, #{exmpleOx}
		)
	</insert>

	<!-- Question 등록 -->
	<insert id="insertQuestion" parameterType="goodee.gdj58.online.vo.Test">
		INSERT INTO question(
			test_no
			, question_idx
			, question_title
		) VALUES (
			#{testNo}
			, #{qustionIdx}
			, #{qustionTitle}
		)
	</insert>

	<!-- TEST 목록/등록/삭제/수정 -->
	<!-- one Test -->
	<select id="thisTest"
		resultType="goodee.gdj58.online.vo.Test"
		parameterType="int">
		SELECT
			test_title testTitle
			, test_date testDate
		FROM test
		WHERE test_no = #{testNo}
	</select>
	
	<!-- TEST 등록 -->
	<insert id="insertTest" parameterType="goodee.gdj58.online.vo.Test">
		INSERT INTO test (
			test_title
			, test_date
		) VALUES (
			#{testTitle}
			, CURDATE()
		)
	</insert>
	<!-- 총 test 갯수 -->
	<select id="ttlTestCnt"
		parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM test
		<where>
			<if test="searchWord != null || searchWord != ''">
				test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>
	
	<!-- TEST LIST -->
	<select id="selectTestList"
		resultType="goodee.gdj58.online.vo.Test"
		parameterType="java.util.Map">
		SELECT
			test_no testNo
			, test_title testTitle
			, test_date testDate
		FROM test
		<where> <!-- 검색값이 있을 경우 where태그 추가 -->
			<if test="searchWord != null || searchWord != ''">
				test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
		ORDER BY test_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>

	<!-- 강사로그인 -->
	<select id="login"
		parameterType="goodee.gdj58.online.vo.Teacher"
		resultType="goodee.gdj58.online.vo.Teacher">
		SELECT
			teacher_no teacherNo
			, teacher_id teacherId
			, teacher_name teacherName
		FROM teacher
		WHERE teacher_id = #{teacherId} AND teacher_pw = PASSWORD(#{teacherPw})	
	</select>

	<!-- ============ 강사 CRUD 목록 (직원이 이용가능) ============ -->
	<!-- 강사삭제 -->
	<delete id="deleteTeacher" parameterType="int">
		DELETE FROM teacher
		WHERE teacher_no = #{teacherNo}
	</delete>

	<!-- 강사추가 -->
	<insert id="insertTeacher" parameterType="goodee.gdj58.online.vo.Teacher">
		INSERT INTO teacher (
			teacher_id
			, teacher_pw
			, teacher_name
		) VALUES (
			#{teacherId}
			,PASSWORD(#{teacherPw})
			,#{teacherName} 
		)
	</insert>
	
	<!-- 총 강사 수 -->
	<select id="ttlTeaCnt"
		parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM teacher
		<where>
			<if test="searchWord != null || searchWord != ''">
				teacher_name LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>
	
	<!-- 강사목록 -->
	<select id="selectTeacherList" 
		resultType="goodee.gdj58.online.vo.Teacher"
		parameterType="java.util.Map">
		
		SELECT
			teacher_no teacherNo
			, teacher_id teacherId
			, teacher_name teacherName
		FROM teacher
		<where> <!-- 검색값이 있을 경우 where태그 추가 -->
			<if test="searchWord != null || searchWord != ''">
				teacher_name LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
		ORDER BY teacher_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
</mapper>