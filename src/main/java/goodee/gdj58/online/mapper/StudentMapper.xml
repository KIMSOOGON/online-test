<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goodee.gdj58.online.mapper.StudentMapper">

	<!-- ============ 시험관련 ================ -->
	<!-- 응시한 시험 채점결과 상세 보기 -->
	<select id="selectScoreOne"
		resultType="java.util.Map"
		parameterType="int">
		SELECT
			q.question_idx questionIdx
			, q.question_title questionTitle
			, e.example_idx exampleIdx
			, e.example_title exampleTitle
			, e.example_ox exampleOx
			, p.answer answer
			, p.answer_ox answerOx
		FROM paper p
		INNER JOIN question q
		ON p.question_no = q.question_no
		INNER JOIN example e
		ON p.question_no = e.question_no
		WHERE p.score_no = #{scoreNo}
	</select>
	
	<!-- 내 score 조회하기 scoreOne -->
	<select id="checkScoreOne"
		parameterType="int"
		resultType="java.util.Map">
		SELECT
			sc.score score
			, sc.score_date scoreDate
			, st.student_name studentName
			, te.test_title testTitle
			, te.test_level testLevel
		FROM score sc
		INNER JOIN student st
		ON sc.student_no = st.student_no
		INNER JOIN test te
		ON sc.test_no = te.test_no
		WHERE sc.score_no = #{scoreNo}
	</select>
	
	<!-- 내 score 조회하기 + 석차 / 제출답안지 채점확인 -->
	<select id="selectScoreList" 
		resultType="java.util.Map"
		parameterType="java.util.Map">
		SELECT
			t.test_title testTitle
			, s.score_no scoreNo
			, s.score score
			, s.score_date scoreDate
			, s.ranking ranking
			, s.ttlStudent
		FROM
			(SELECT
				score_no
				, student_no
				, test_no
				, score
				, score_date
				, (SELECT COUNT(*) 
					FROM score 
					WHERE test_no = s.test_no) AS ttlStudent
				, (SELECT COUNT(*) 
					FROM score 
					WHERE test_no = s.test_no AND score > s.score) + 1 AS ranking
			FROM 
				score s
			WHERE 
				s.student_no = #{studentNo}
				AND s.test_no IN (SELECT test_no FROM score WHERE student_no = #{studentNo})
			) s
		INNER JOIN test t ON s.test_no = t.test_no
		INNER JOIN student st ON s.student_no = st.student_no
		<where>
			<if test="searchWord != null || searchWord != ''">
				AND t.test_title LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
		ORDER BY s.score_date DESC, s.score_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 응시한 시험 갯수 -->
	<select id="ttlScoreCnt"
		parameterType="String"
		resultType="int">
		SELECT COUNT(*) 
		FROM score s
		INNER JOIN test t ON s.test_no = t.test_no
		WHERE s.student_no = #{studentNo}
		<if test="searchWord != null || searchWord != ''">
			AND t.test_title LIKE CONCAT('%',#{searchWord},'%')
		</if>
	</select>
	
	<!-- 깡통 score에 채점한 점수 기입하기 -->
	<update id="updateScore"
		parameterType="goodee.gdj58.online.vo.Score">
		UPDATE score 
		SET score = #{score}
		WHERE score_no = #{scoreNo}
	</update>
	
	<!-- 깡통 score의 scoreNo select -->
	<select id="selectLatestScoreNo"
		resultType="int">
		SELECT score_no
		FROM score
		ORDER BY score_no DESC
		LIMIT 0,1
	</select>
	
	<!-- 깡통 score생성 (채점전 paper insert 이전) -->
	<insert id="insertScoreDefault"
		parameterType="goodee.gdj58.online.vo.Score">
		INSERT INTO score(
			student_no
			, test_no
			, score
			, score_date
		) VALUES (
			#{studentNo}
			, #{testNo}
			, '0'
			, CURDATE()
		)
	</insert>
	
	<!-- score 저장하기 -->
	<insert id="insertScorePaper"
		parameterType="goodee.gdj58.online.vo.Score">
		INSERT INTO score(
			student_no
			, test_no
			, score
			, score_date
		) VALUES (
			#{studentNo}
			, #{testNo}
			, #{score}
			, CURDATE()
		)
	</insert>
	
	<!-- 정답갯수 (맞춘 문항 수) -->
	<select id="ttlCorrectCnt"
		parameterType="int"
		resultType="int">
		SELECT COUNT(*)
		FROM paper
		WHERE test_no = #{testNo} AND answer_ox = '정답'
	</select>
	
	<!-- 해당시험 전체 문항갯수 -->
	<select id="ttlQuestionCnt"
		parameterType="int"
		resultType="int">
		SELECT COUNT(*)
		FROM question
		WHERE test_no = #{testNo}	
	</select>
	
	<!-- question 답 불러오기 -->
	<select id="selectQuestionOx"
		parameterType="int"
		resultType="int">
		SELECT example_idx exampleIdx
		FROM example
		WHERE question_no = #{questionNo} AND example_ox = '정답'
	</select>
	
	<!-- paper answer 등록 -->
	<insert id="insertPaperAnswer"
		parameterType="goodee.gdj58.online.vo.Paper">
		INSERT INTO paper(
			student_no
			, test_no
			, score_no
			, question_no
			, answer
			, answer_ox
		) VALUES (
			#{studentNo}
			, #{testNo}
			, #{scoreNo}
			, #{questionNo}
			, #{answer}
			, #{answerOx}
		)
	</insert>
	
	<!-- 시험지 출력 (문제당 보기항목) -->
	<select id="selectExampleList"
		resultType="java.util.Map"
		parameterType="int">
		SELECT
			q.question_no questionNo
			, q.question_idx questionIdx
			, q.question_title questionTitle
			, e.example_idx exampleIdx
			, e.example_title exampleTitle
			, e.example_ox exampleOx
		FROM question q
		INNER JOIN example e ON e.question_no = q.question_no
		WHERE q.test_no = #{testNo}
		ORDER BY q.question_idx ASC, e.example_idx ASC
	</select>

	<!-- ============ 학생 CRUD 목록 ============ -->
	<!-- 비밀번호수정 -->
	<update id="updateStudentPw"
		parameterType="java.util.Map">
		UPDATE student
		SET student_pw = PASSWORD(#{newPw})
		WHERE student_no = #{studentNo} AND student_pw = PASSWORD(#{oldPw})
	</update>
	
	<!-- 학생 로그인 -->
	<select id="login"
		parameterType="goodee.gdj58.online.vo.Student"
		resultType="goodee.gdj58.online.vo.Student">
		SELECT
			student_no studentNo
			, student_id studentId
			, student_name studentName
		FROM student
		WHERE student_id = #{studentId} AND student_pw = PASSWORD(#{studentPw})	
	</select>
	
	<!-- 학생삭제 -->
	<delete id="deleteStudent" parameterType="int">
		DELETE FROM student
		WHERE student_no = #{studentNo}
	</delete>

	<!-- 학생추가 -->
	<insert id="insertStudent" parameterType="goodee.gdj58.online.vo.Student">
		INSERT INTO student (
			student_id
			, student_pw
			, student_name
		) VALUES (
			#{studentId}
			,PASSWORD(#{studentPw})
			,#{studentName} 
		)
	</insert>
	
	<!-- 총 학생 수 -->
	<select id="ttlStuCnt"
		parameterType="String"
		resultType="int">
		SELECT COUNT(*) FROM student
		<where>
			<if test="searchWord != null || searchWord != ''">
				student_name LIKE CONCAT('%',#{searchWord},'%')
			</if>
		</where>
	</select>
	
	<!-- 학생목록 -->
	<select id="selectStudentList" 
		resultType="goodee.gdj58.online.vo.Student"
		parameterType="java.util.Map">
		
		SELECT
			student_no studentNo
			, student_id studentId
			, student_name studentName
		FROM student
		<!-- 검색값이 있을 경우 where태그 추가 -->
		<if test="searchWord != null || searchWord != ''">
			WHERE student_name LIKE CONCAT('%',#{searchWord},'%')
		</if>
		ORDER BY student_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
</mapper>